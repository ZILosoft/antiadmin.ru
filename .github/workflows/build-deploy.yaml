name: Deploy blog
on:
  workflow_dispatch:
  push:
    branches:
      - master
    paths:
      - content/**


concurrency:
  group: "build-deploy"
  cancel-in-progress: true

permissions:
  contents: write
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.117.0
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v3
        with:
          submodules: recursive
          fetch-depth: 0
      - uses: danielr1996/envsubst-action@1.0.0
        name: Envsubst on template
        env:
          APP_CLIENT_ID: ${{ secrets.APP_CLIENT_ID }}
          APP_CLIENT_SECRET: ${{ secrets.APP_CLIENT_SECRET }}
          GITALK_OWNER: "ZILosoft"
          GITALK_ADMIN: "ZILosoft"
          GITALK_ID: "location.pathname"
          PROFILE_STATUS_EMOJI: "ü´†"
          PROFILE_LOCATION: "Europe"
          PROFILE_NAME: "ZILosoft"
          PROFILE_GITHUB: ${{ secrets.PROFILE_GITHUB }}
          PROFILE_TELEGRAM: ${{ secrets.PROFILE_TELEGRAM }}
          PUBLIC_TELEGRAM: ${{ secrets.PUBLIC_TELEGRAM }}
          RU_RU_COPYRIGHT: "¬Æ"
          RU_RU_TITLE: "–ï—â–µ –æ–¥–∏–Ω –±–µ—Å–ø–æ–ª–µ–∑–Ω—ã–π –±–ª–æ–≥"
          RU_RU_DESCRIPTION: "–∏–Ω–æ–≥–¥–∞ —á—Ç–æ —Ç–æ —Å—é–¥–∞ –ø–∏—à—É"
          EN_US_COPYRIGHT: "¬Æ"
          EN_US_TITLE: "blog antiadmin"
          EN_US_DESCRIPTION: "blog antiadmin"
        with:
          input: example.hugo.yaml
          output: hugo.yaml
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Build with Hugo
        env:
          HUGO_ENVIRONMENT: production
          HUGO_ENV: production
        run: |
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2

  notify:
    name: Announce new post on Telegram
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: get notify message
        id: notify
        run: |
          echo "::set-output name=notify::$(cd tools/actions/scripts && python get-first-unpublished-announcement.py)"
      - name: send telegram message
        if: ${{ steps.notify.outputs.notify != '' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ steps.notify.outputs.notify }}
      - name: commit and push
        if: ${{ steps.notify.outputs.notify != '' }}
        run: |
          git config user.name GitHubActionsBot
          git config user.email github-actions@github.com
          git add tools/actions/db/announcements.json
          git commit -m "chore: update announcements.json"
          git push
